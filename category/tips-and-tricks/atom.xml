<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips and Tricks | Linux Sysadmin Blog]]></title>
  <link href="http://linuxsysadminblog.com/category/tips-and-tricks/atom.xml" rel="self"/>
  <link href="http://linuxsysadminblog.com/"/>
  <updated>2012-11-13T01:46:22+08:00</updated>
  <id>http://linuxsysadminblog.com/</id>
  <author>
    <name><![CDATA[Promet OPS Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup SSH Key Authentication]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/setup-ssh-key-authentication/"/>
    <updated>2011-04-17T15:46:41+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/setup-ssh-key-authentication</id>
    <content type="html"><![CDATA[<p>Setup ssh key authentication for password-less login between servers.  For use by ssh/sftp users or scripts.</p>

<p><strong>Source Server </strong>(or local system)</p>

<p>Generate RSA key for user on this system, you can also use DSA.  This asks for key pass-phrase but you can leave it blank.</p>

<p><code>
ssh-keygen -t rsa
</code></p>

<p>This asks for location to place the generated key, by default it will be your home directory (<em>ex: /home/your_username/.ssh/</em>).  This generates two files:  <em>id_rsa</em> and <em>id_rsa.pub</em>.  Content of <em>id_rsa.pub </em>is what we need to copy to destination server.</p>

<p><strong>Destination Server </strong>(or remote server)</p>

<p>Check if you have the directory <em>.ssh</em> on your home (<em>ex: /home/username/.ssh/</em>), if not, create that directory.</p>

<p><code>
ls  ~/.ssh
mkdir  ~/.ssh
</code>
Check if you have existing file <em>authorized_keys </em>on your <em>.ssh</em> directory, if not create it.</p>

<p><code>
ls  ~/.ssh/ authorized_keys
touch   ~/.ssh/ authorized_keys
</code></p>

<p>Copy content of <em>id_rsa.pub </em>that you created<em> </em>from your source/local server, or execute this command from your <strong>source/local server</strong>:</p>

<p><code>
scp  ~/.ssh/id_rsa.pub username@remote_host:~/.ssh/authorized_keys
</code></p>

<p>Test your password-less login from source to destination server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup SFTP-Only Access (Redhat-based Distro)]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/setup-sftp-only-access-redhat-based-distro/"/>
    <updated>2011-04-12T14:41:17+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/setup-sftp-only-access-redhat-based-distro</id>
    <content type="html"><![CDATA[<p>Setup sftp-only access on default Redhat/CentOS install.  Use built-in <em>sftp-server</em> which is non-chrooted and easy to setup.</p>

<p><strong>Server: </strong>Locate sftp-server binary and add to your list of valid shells on the system.</p>

<p><code>
which sftp-server
</code></p>

<p>Note:   This will most likely give you this: <em>/usr/libexec/openssh/sftp-server</em></p>

<p><code>
echo /usr/libexec/openssh/sftp-server &gt;&gt; /etc/shells
</code></p>

<p>Note:  You may want to backup your /etc/shells first</p>

<p><strong>User Accounts</strong>:  Add or modify accounts to use sftp-server.</p>

<p><strong>New User</strong></p>

<p><code>
useradd -s /usr/libexec/openssh/sftp-server  sftponlyuser
</code></p>

<p>Note:  Important parameter there is the <em>“-s /usr/libexec/openssh/sftp-server"</em>, which sets the default shell for this account.   By default you will have “<em>/bin/bash</em>”.</p>

<p><strong>Existing User:</strong></p>

<p><code>
vi /etc/passwd
</code></p>

<p><strong><em> </em></strong> Find the user that you want to configure for sftp only access and edit its shell.  For exampleyou will see a line “<em>username:x:500:500::/home/username:/bin/bash” _ change "</em>/bin/bash<em>" to "</em>/usr/libexec/openssh/sftp-server_" and save.  Note: _ Y_ou may want to backup your /etc/passwd file as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving Drupal site with CiviCRM]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/moving-drupal-site-with-civicrm/"/>
    <updated>2011-04-11T10:24:29+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/moving-drupal-site-with-civicrm</id>
    <content type="html"><![CDATA[<p>The common headache for beginners who try to move their Drupal site with CiviCRM is the CiviCRM configuration on new location or domain.  I did this countless times and dealt with different problems before.  I've read many online tutorials and how-tos, and I finally have my notes which is working for me everytime i move Drupal and CiviCRM site.</p>

<p>Let's assume you already moved the databases (separate database for Drupal and CiviCRM as a recommended setup) and the files to new location and have set the correct file permissions as well.  Here is the part that you need for your CiviCRM to work on new location and domain:</p>

<ul>
<li>access your database and empty <code>civicrm.domain:config_backend</code>.  You see this anywhere with CiviCRM guide.</li>
<li>update database details, site path/directory, and domain on <code>civicrm.settings.php</code></li>
<li>emtpy <code>sites/default/files/civicrm/template_c</code> (or make this entire dir writable by web user)</li>
<li>login to you new Drupal site and visit these urls:
<code>http://sitename/civicrm/menu/rebuild?reset=1</code>
<code>http://sitename/civicrm/admin/setting/updateConfigBackend?reset=1</code></li>
</ul>


<p><strong>Note:</strong> This will rebuild the settings for you - if not, repeat/review all the above steps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gmail Shorcuts]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/gmail-shorcuts/"/>
    <updated>2011-04-01T13:11:45+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/gmail-shorcuts</id>
    <content type="html"><![CDATA[<p>Besides Gmail, many sites are moving to GoogleApps for hosting their emails, and if you use Gmail or GoogleApps a lot then you might love the keyboard shortcuts feature.</p>

<p>You can quickly see available shortcut keys by typing "?" (<em>question mark, no qoutes</em>) and it will give you this screen.</p>

<p><a href="http://linuxsysadminblog.com/images/2011/04/gmail_shortcut.png"><img src="http://linuxsysadminblog.com/images/2011/04/gmail_shortcut-300x175.png" alt="gmail shortcut" /></a></p>

<p>Of course you need to enable keyboard shortcuts on your settings.  :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo remove a list of files]]></title>
    <link href="http://linuxsysadminblog.com/2010/07/howto-remove-a-list-of-files/"/>
    <updated>2010-07-09T16:33:28+08:00</updated>
    <id>http://linuxsysadminblog.com/2010/07/howto-remove-a-list-of-files</id>
    <content type="html"><![CDATA[<p>Here is a quick tip on how to remove a list of files. Let's say you have the list of files inside a file called <strong>files_to_remove</strong>. Usually I would do something like this:</p>

<pre><code>LIST=\`cat files_to_remove\`
</code></pre>

<p>and then</p>

<pre><code>ls -al $LIST
</code></pre>

<p>just to check what is in the list and if it looks good.</p>

<p>And finally:</p>

<pre><code>rm -vf $LIST
</code></pre>
]]></content>
  </entry>
  
</feed>
