<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Centos | Linux Sysadmin Blog]]></title>
  <link href="http://linuxsysadminblog.com/category/centos/atom.xml" rel="self"/>
  <link href="http://linuxsysadminblog.com/"/>
  <updated>2012-11-21T23:14:46+08:00</updated>
  <id>http://linuxsysadminblog.com/</id>
  <author>
    <name><![CDATA[Promet OPS Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[YUM: There are unfinished transactions remaining. You might consider running yum-complete-transaction first to finish them.]]></title>
    <link href="http://linuxsysadminblog.com/2012/04/yum-there-are-unfinished-transactions-remaining-you-might-consider-running-yum-complete-transaction-first-to-finish-them/"/>
    <updated>2012-04-30T07:34:45+08:00</updated>
    <id>http://linuxsysadminblog.com/2012/04/yum-there-are-unfinished-transactions-remaining-you-might-consider-running-yum-complete-transaction-first-to-finish-them</id>
    <content type="html"><![CDATA[<p>Yum Error:
<code>
There are unfinished transactions remaining. You might consider running yum-complete-transaction first to finish them.
</code></p>

<p>With <em>unfinished transactions</em>, yum refers to any incomplete or aborted transactions, such as package installations or updates.  Obviously, yum wants you to run <code>yum-complete-transaction</code> command to fix the problem.  If you can't find <em>yum-complete-transaction</em> on your system, probably you don't have the package "<em>yum-utils</em>" installed, so install it first with <code>yum install yum-utils</code>.</p>

<p>If you run <em>yum-complete-transaction</em> command, it will find and resolve the latest corrupted/aborted transaction and try to complete or fix it, and you have to run it again until all issues are fixed.  Running that command will tell you how many transactions are left to complete, package name, and so on.  Try running <code>/usr/sbin/yum-complete-transaction --help</code> for options in using this commands.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup SSH Key Authentication]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/setup-ssh-key-authentication/"/>
    <updated>2011-04-17T15:46:41+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/setup-ssh-key-authentication</id>
    <content type="html"><![CDATA[<p>Setup ssh key authentication for password-less login between servers.  For use by ssh/sftp users or scripts.</p>

<p><strong>Source Server </strong>(or local system)</p>

<p>Generate RSA key for user on this system, you can also use DSA.  This asks for key pass-phrase but you can leave it blank.</p>

<p><code>
ssh-keygen -t rsa
</code></p>

<p>This asks for location to place the generated key, by default it will be your home directory (<em>ex: /home/your_username/.ssh/</em>).  This generates two files:  <em>id_rsa</em> and <em>id_rsa.pub</em>.  Content of <em>id_rsa.pub </em>is what we need to copy to destination server.</p>

<p><strong>Destination Server </strong>(or remote server)</p>

<p>Check if you have the directory <em>.ssh</em> on your home (<em>ex: /home/username/.ssh/</em>), if not, create that directory.</p>

<p><code>
ls  ~/.ssh
mkdir  ~/.ssh
</code>
Check if you have existing file <em>authorized_keys </em>on your <em>.ssh</em> directory, if not create it.</p>

<p><code>
ls  ~/.ssh/ authorized_keys
touch   ~/.ssh/ authorized_keys
</code></p>

<p>Copy content of <em>id_rsa.pub </em>that you created<em> </em>from your source/local server, or execute this command from your <strong>source/local server</strong>:</p>

<p><code>
scp  ~/.ssh/id_rsa.pub username@remote_host:~/.ssh/authorized_keys
</code></p>

<p>Test your password-less login from source to destination server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 5.6 released]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/centos-5-6-released/"/>
    <updated>2011-04-15T14:44:29+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/centos-5-6-released</id>
    <content type="html"><![CDATA[<p>While people are still waiting to for Centos 6 (after many month since RHEL6 was released) we got a little teaser in the <a href="http://lists.centos.org/pipermail/centos-announce/2011-April/017282.html">release</a> of <strong>Centos 5.6</strong> last week. This is a minor security release, but it also brings in some interesting additions like <strong>ext4</strong> support and <strong>php53</strong> packages among others.</p>

<p>If you are running any Centos 5.x minor version you should be able to upgrade just by running:
<code>
yum update
</code></p>

<p>We already upgraded to Centos 5.6 all our servers and you should do the same also, and hopefully soon we will see the Centos6 release that everyone is waiting for.</p>

<p>For the full list of packages changed/added please see the centos5.6 release notes: <a href="http://wiki.centos.org/Manuals/ReleaseNotes/CentOS5.6">http://wiki.centos.org/Manuals/ReleaseNotes/CentOS5.6</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup SFTP-Only Access (Redhat-based Distro)]]></title>
    <link href="http://linuxsysadminblog.com/2011/04/setup-sftp-only-access-redhat-based-distro/"/>
    <updated>2011-04-12T14:41:17+08:00</updated>
    <id>http://linuxsysadminblog.com/2011/04/setup-sftp-only-access-redhat-based-distro</id>
    <content type="html"><![CDATA[<p>Setup sftp-only access on default Redhat/CentOS install.  Use built-in <em>sftp-server</em> which is non-chrooted and easy to setup.</p>

<p><strong>Server: </strong>Locate sftp-server binary and add to your list of valid shells on the system.</p>

<p><code>
which sftp-server
</code></p>

<p>Note:   This will most likely give you this: <em>/usr/libexec/openssh/sftp-server</em></p>

<p><code>
echo /usr/libexec/openssh/sftp-server &gt;&gt; /etc/shells
</code></p>

<p>Note:  You may want to backup your /etc/shells first</p>

<p><strong>User Accounts</strong>:  Add or modify accounts to use sftp-server.</p>

<p><strong>New User</strong></p>

<p><code>
useradd -s /usr/libexec/openssh/sftp-server  sftponlyuser
</code></p>

<p>Note:  Important parameter there is the <em>“-s /usr/libexec/openssh/sftp-server"</em>, which sets the default shell for this account.   By default you will have “<em>/bin/bash</em>”.</p>

<p><strong>Existing User:</strong></p>

<p><code>
vi /etc/passwd
</code></p>

<p><strong><em> </em></strong> Find the user that you want to configure for sftp only access and edit its shell.  For exampleyou will see a line “<em>username:x:500:500::/home/username:/bin/bash” _ change "</em>/bin/bash<em>" to "</em>/usr/libexec/openssh/sftp-server_" and save.  Note: _ Y_ou may want to backup your /etc/passwd file as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Subversion (SVN) and mod_dav_svn on Cpanel Server]]></title>
    <link href="http://linuxsysadminblog.com/2010/10/setup-subversion-svn-and-mod_dav_svn-on-cpanel-server/"/>
    <updated>2010-10-18T06:00:06+08:00</updated>
    <id>http://linuxsysadminblog.com/2010/10/setup-subversion-svn-and-mod_dav_svn-on-cpanel-server</id>
    <content type="html"><![CDATA[<p>Quick install guide for SVN with mod_dav_svn (http/https) repository access on Cpanel server running CentOs5.</p>

<p><strong>Configure Cpanel for SVN</strong></p>

<p>Recompile Apache/PHP (<em>WHM -> Software -> EasyApache</em>) and enable support for the following:</p>

<ul>
<li>Dav (<em>Among other things mod_dav can be used by DAV enabled Frontpage clients instead of FP extensions</em>)</li>
<li>BerkeleyDB.  <strong>Note</strong>: BerkeleyDB support ("<em>--with-berkeley-db</em>") is not enabled by default in EasyApache so you need to add this manually to your EasyApache config using <a href="http://docs.cpanel.net/twiki/bin/view/EasyApache3/CustomConfigureFlags">this guide</a> or <a href="http://community.eapps.com/showthread.php?271-Adding-subversion-support-to-Apache">this one</a>.</li>
</ul>


<p><strong>Install Subversion and mod_dav_svn</strong></p>

<p>Install subversion using yum (<em>yum install subversion</em>) or install it from source.  At this time CentOS repo version is 1.4.x and the latest from source is 1.6.x.</p>

<p><strong>Install and enable mod_dav_svn in Cpanel</strong></p>

<ul>
<li>Install mod_dav_svn using yum (<em>yum install mod_dav_svn</em>) - version 1.4.x same as subersion above.</li>
<li>Load mod_dav_svn module to Apache.  Go to <em>WHM -> Service Configuration -> Apache Configuration -> Include Editor -> Pre-Main Include</em>.   Select either "<em>All Versions</em>" or your current Apache version (ex: "<em>2.2.16</em>") from drop-down list.  Or you can edit their corresponding file directly:

<ul>
<li>All Versions:  <em>/usr/local/apache/conf/includes/pre_main_global.conf</em></li>
<li>Apache 2.2.16: <em>/usr/local/apache/conf/includes/pre_main_2.conf</em></li>
</ul>
</li>
<li>Add the codes below and click "<em>Update</em>" button to save config. This will restart Apache if no error on your configuration.
<code>
&lt;IfModule mod_dav.c&gt;
LoadModule dav_svn_module /usr/lib/httpd/modules/mod_dav_svn.so
LoadModule authz_svn_module /usr/lib/httpd/modules/mod_authz_svn.so
&lt;/IfModule&gt;
</code></li>
</ul>


<p><strong>Create repository and add http access (ex: http://domain.com/svn)</strong></p>

<ul>
<li>Create your repository: <code>svnadmin create /path/to/svn/repos</code></li>
<li>Add the code below to your domain's custom include file.  You need to create this file based on <a href="http://www.cpanel.net/documentation/easyapache/customdirectives.html">this guide</a> to preserve when you recompile Apache/PHP.
Example file (Apache2,standard/non-ssl):  <code>/usr/local/apache/conf/userdata/std/2/cpanl_user/domain.com/svn.conf</code>
File Contents:
<code>
  &lt;Location /svn&gt;
  #  mod dav svn support and location of svn repo files
  DAV svn
  SVNPath /path/to/svn/repos
  # authentication for security, create using htpasswd
  AuthType Basic
  AuthName "SVN Access"
  AuthUserFile /path/to/file/containing/user.pass
  Require valid-user
  # added for permissions/access
  Order allow,deny
  Allow from all
  &lt;/Location&gt;
</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
